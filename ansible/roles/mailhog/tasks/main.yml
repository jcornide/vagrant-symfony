---
# Install and configure MailHog.
- name: Ensure mailhog install directory exists.
  file:
    path: "{{ mailhog_install_dir }}"
    owner: root
    group: root
    state: directory
    mode: 0755

- name: Download MailHog and mhsendmail binaries.
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - url: "{{ mailhog_binary_url }}"
      dest: "{{ mailhog_install_dir }}/mailhog"
    - url: "{{ mhsendmail_binary_url }}"
      dest: "{{ mailhog_install_dir }}/mhsendmail"

- name: Copy mailhog init script into place.
  template:
    src: mailhog.init.j2
    dest: /etc/init.d/mailhog
    owner: root
    group: root
    mode: 0755

- name: Copy mailhog systemd unit file into place (for systemd systems).
  template:
    src: mailhog.unit.j2
    dest: /etc/systemd/system/mailhog.service
    owner: root
    group: root
    mode: 0755
  when: >
    (ansible_distribution == 'Ubuntu' and ansible_distribution_version.split(".")[0]|int >= 14) or
    (ansible_distribution == 'Debian' and ansible_distribution_version.split(".")[0]|int >= 8) or
    (ansible_distribution == 'CentOS' and ansible_distribution_version.split(".")[0]|int >= 7) or
    (ansible_distribution == 'Fedora')

- name: Ensure mailhog is enabled and will start on boot.
  service: name=mailhog state=started enabled=yes

- name: Configure php.ini
  lineinfile:
    dest: "{{ item }}"
    regexp: '^sendmail_path'
    line: 'sendmail_path = /opt/mailhog/mhsendmail'
  with_items:
    - "/etc/php/7.1/fpm/php.ini"
    - "/etc/php/7.1/cli/php.ini"

- name: Ensure mailhog is enabled and will start on boot.
  service: name=mailhog state=started enabled=yes

- name: Install sendemail
  apt: pkg={{ item }} state=latest
  with_items:
    - "sendemail"
    - "libio-socket-ssl-perl"